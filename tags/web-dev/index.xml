<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Web-Dev on Nice Polar Blog</title><link>https://1hiking.github.io/tags/web-dev/</link><description>Recent content in Web-Dev on Nice Polar Blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 14 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://1hiking.github.io/tags/web-dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Playing with the CSS Paint API</title><link>https://1hiking.github.io/posts/2022/02/playing-with-the-css-paint-api/</link><pubDate>Fri, 11 Feb 2022 00:00:00 +0000</pubDate><guid>https://1hiking.github.io/posts/2022/02/playing-with-the-css-paint-api/</guid><description>&lt;details>
 &lt;summary>Table of Contents&lt;/summary>&lt;nav id="TableOfContents">
 &lt;ul>
 &lt;li>&lt;a href="#what-is-it">What is it?&lt;/a>&lt;/li>
 &lt;li>&lt;a href="#how-to-create-one">How to create one&lt;/a>&lt;/li>
 &lt;/ul>
&lt;/nav>
&lt;/details>

&lt;p>Some weeks ago while studying about CSS, I stumbled upon &lt;a href="https://houdini.how">https://houdini.how&lt;/a> and it seems as a fun feature to experiment and integrate in your projects in the
future.&lt;/p>

&lt;h2 id="what-is-it">What is it?
 &lt;a class="anchor" href="#what-is-it">ðŸ”—&lt;/a>
&lt;/h2>


&lt;p>The same way HTML has the DOM, CSS has the CSS Object Model (CSSOM) and the CSS Houdini group are developing APIs that are meant to allow developers to make use
of it in the form of Worklets, these can be reusable and shared between projects. It&amp;rsquo;s basically a way to allow developers to not wait for a browser standard
and instead develop their own little features.&lt;/p></description></item><item><title>A quick change to featured posts in Hugo</title><link>https://1hiking.github.io/posts/2022/01/a-quick-change-to-featured-posts-in-hugo/</link><pubDate>Mon, 24 Jan 2022 00:00:00 +0000</pubDate><guid>https://1hiking.github.io/posts/2022/01/a-quick-change-to-featured-posts-in-hugo/</guid><description>&lt;p>I have been recently looking about how to add latests posts in my index page, since it has a giant space that has no purpose. I quickly glanced at this
&lt;a href="https://damien.co/blog/2020-06-13-hugo-featured-posts-list/">article by Damien&lt;/a> in which he shared this snippet of code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-HTML" data-lang="HTML">&lt;span style="display:flex;">&lt;span>{{ range first 3 ( where .Site.Pages &amp;#34;Type&amp;#34; &amp;#34;in&amp;#34; site.Params.mainSections )}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{ end }}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>However, it should add &lt;code>.Site.RegularPages&lt;/code> instead of &lt;code>.Site.Pages&lt;/code> because as the &lt;a href="https://gohugo.io/variables/site/#site-pages">Hugo documentation states&lt;/a>,
.Site.Pages will include &lt;em>everything&lt;/em> which could lead to unexpected entries, such as a list entry, while RegularPages will only include &lt;em>regular&lt;/em> pages.&lt;/p></description></item><item><title>A nice table of contents</title><link>https://1hiking.github.io/posts/2022/01/a-nice-table-of-contents/</link><pubDate>Thu, 20 Jan 2022 00:00:00 +0000</pubDate><guid>https://1hiking.github.io/posts/2022/01/a-nice-table-of-contents/</guid><description>&lt;p>Until now, I have used the following snippet to make a table of contents.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-HTML" data-lang="HTML">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eceff4">&amp;lt;&lt;/span>&lt;span style="color:#81a1c1">div&lt;/span> &lt;span style="color:#8fbcbb">class&lt;/span>&lt;span style="color:#81a1c1">=&lt;/span>&lt;span style="color:#a3be8c">&amp;#34;toc&amp;#34;&lt;/span>&lt;span style="color:#eceff4">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#eceff4">&amp;lt;&lt;/span>&lt;span style="color:#81a1c1">p&lt;/span>&lt;span style="color:#eceff4">&amp;gt;&lt;/span>Table of Contents&lt;span style="color:#eceff4">&amp;lt;/&lt;/span>&lt;span style="color:#81a1c1">p&lt;/span>&lt;span style="color:#eceff4">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{- .Page.TableOfContents }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eceff4">&amp;lt;/&lt;/span>&lt;span style="color:#81a1c1">div&lt;/span>&lt;span style="color:#eceff4">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>However, when you have a lot of sections it becomes a bit annoying for the visitor to scroll to read.&lt;/p>
&lt;p>An easy solution would be to use JS to detect a click and expand the table, or using CSS :hover events but in each case you will add unnecessary complexity as
the project grows.&lt;/p></description></item><item><title>Making a browser from Scratch!</title><link>https://1hiking.github.io/posts/2021/04/making-a-browser-from-scratch/</link><pubDate>Mon, 26 Apr 2021 00:00:00 +0000</pubDate><guid>https://1hiking.github.io/posts/2021/04/making-a-browser-from-scratch/</guid><description>&lt;details>
 &lt;summary>Table of Contents&lt;/summary>&lt;nav id="TableOfContents">
 &lt;ul>
 &lt;li>&lt;a href="#introduction">Introduction&lt;/a>&lt;/li>
 &lt;li>&lt;a href="#requirements">Requirements&lt;/a>&lt;/li>
 &lt;li>&lt;a href="#conclusions">Conclusions&lt;/a>&lt;/li>
 &lt;li>&lt;a href="#inspired-by">Inspired by&lt;/a>&lt;/li>
 &lt;/ul>
&lt;/nav>
&lt;/details>


&lt;h2 id="introduction">Introduction
 &lt;a class="anchor" href="#introduction">ðŸ”—&lt;/a>
&lt;/h2>


&lt;p>So let&amp;rsquo;s talk about developing a browser, one of the most complex programs in
your computer!&lt;/p>
&lt;p>As most people know, since the 90&amp;rsquo;s web browsers have been an essential program
in anyone&amp;rsquo;s computer, they allow you to connect with your friends online, play
videogames, read scientific papers, or even niche functions to connect to
FTP&amp;hellip;! oh actually nevermind.&lt;/p>
&lt;p>Well with that quick recap, I will teach you how to make your own browser from
scratch!&lt;/p></description></item></channel></rss>